/*
 *
 * Callbacks v1.0.0
 * http://github.com/vanils/callbacks
 *
 * Copyright 2014, Matti Mehtonen
 * Licensed under the MIT license.
 * http://github.com/vanils/callbacks/blob/master/LICENSE
 *
 */
!function(a){"use strict";var b,c,d,e,f,g;if("undefined"!=typeof a)if(a.Callbacks||a.C)if(a.Callbacks){if(a.C)throw new Error("Namespaces 'Callbacks' and 'C' are already taken on window object. Cannot load Callbacks.js.");b=a.C={}}else b=a.Callbacks={};else b=a.Callbacks=a.C={};else b=exports;c={},f={},d=function(a,b){this._type=a,this._callback=b},d.prototype._alive=!0,d.prototype.remove=function(){f[this._type]?this._alive=!1:c.splice(g(c[this._type],this),1)},g="function"==typeof Array.prototype.indexOf?function(a,b){return a.indexOf(b)}:function(a,b){var c,d;for(c=0,d=a.length;d>c;c++)if(a[c]===b)return c;return-1},e="function"==typeof Array.isArray?function(a){return Array.isArray(a)}:function(a){return"[object Array]"===Object.prototype.toString.call(a)},b.on=function(a,b){var e;if("string"!=typeof a)throw new Error("Incorrect arguments. Type must be string.");if("function"!=typeof b)throw new Error("Incorrect arguments. Callback must be function.");return e=new d(a,b),c[a]||(c[a]=[],f[a]=!1),c[a].push(e),e},b.remove=function(a){var b;if("string"==typeof a){if(c[a])if(f[a])for(b=c[a].length;b--;)c[a][b]._alive=!1;else c[a]=[]}else a&&a._type&&c[a._type]&&(b=g(c[a._type],a),-1!==b&&c[a._type][b].remove())},b.fire=function(a,b){var d,g;if(c[a]){if(f[a]=!0,e(b))for(d=0,g=c[a].length;g>d;d++)c[a][d]._alive&&c[a][d]._callback.apply(c[a][d],b);else for(d=0,g=c[a].length;g>d;d++)c[a][d]._alive&&c[a][d]._callback.call(c[a][d],b);for(f[a]=!1,d=c[a].length;d--;)c[a][d]._alive||c[a].splice(d,1)}}}("undefined"!=typeof window?window:void 0);